# 10 x 10の迷路を解く
# 入力は、4辺のどこか2箇所が必ず開いている（スタートorゴール）ものとする
# 移動方向は縦横のみ、斜めはなし
# 入力例
# # ########
# # ## ### #
# #    ##  #
# ####    ##
# # ## #####
# #    #   #
# # #### # #
# #      # #
# ## ## ## #
# ######## #
# 出力例
# #+########
# #+## ### #
# #++++##  #
# ####+   ##
# # ##+#####
# #++++#+++#
# #+####+#+#
# #++++++#+#
# ## ## ##+#
# ########+#

maze = <<~MAZE
  # ########
  # ## ### #
  #    ##  #
  ####    ##
  # ## #####
  #    #   #
  # #### # #
  #      # #
  ## ## ## #
  ######## #
MAZE

maze.sub!(/[^\S\n]/, 'S')
maze.reverse!.sub!(/[^\S\n]/, 'G').reverse!
ans = maze
x = maze.index('G')
w = maze.index("\n")
maze = maze.tr('SG', '4 ')
until maze[x, 1] != ' '
  maze = maze.gsub(/ (.{#{w}}\d)/m, '0\1')  # 下が数値の空白を0に置換
             .gsub(/ (\d)/, '1\1')          # 左が数値の空白を1に置換
             .gsub(/(\d) /, '\12')          # 右が数値の空白を2に置換
             .gsub(/(\d.{#{w}}) /m, '\13')  # 下が数値の空白を3に置換
end
until ans[x += [w + 1, 1, -1, -(w + 1)][maze[x, 1].to_i]] == 'S'    #[下, 右, 左, 上]
  ans[x] = '+'
end
print ans
